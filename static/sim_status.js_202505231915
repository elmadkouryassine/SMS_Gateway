async function refreshSims() {
  try {
    const resp = await fetch('/api/sim/status');
    if (!resp.ok) return;
    const data = await resp.json();

    const maxQuality = 31;
    const barCount   = 5;
    const thresholds = Array.from({ length: barCount }, (_, i) =>
      Math.ceil((i + 1) * maxQuality / barCount)
    );

    data.forEach(sim => {
      const card = document.querySelector(`#sim-${sim.id}`);
      if (!card) return;

      // Update status badge
      const badge = card.querySelector('.status-badge');
      if (badge.textContent.trim() !== sim.status) {
        badge.textContent = sim.status;
        badge.className  = 'status-badge badge ' +
          (sim.status === 'ONLINE' ? 'bg-success' : 'bg-secondary');
      }

      // Update signal text
      const text = card.querySelector('.signal-text');
      if (text) {
        text.textContent = `Signal: ${sim.signal_quality}/31`;
        text.className = 'signal-text text-' +
          (sim.signal_quality >= 20
             ? 'success'
             : sim.signal_quality >= 10
               ? 'warning'
               : 'danger');
      }

      // Update bars
      const bars = card.querySelectorAll('.signal-bar');
      bars.forEach((bar, i) => {
        bar.classList.toggle('active', sim.signal_quality >= thresholds[i]);
      });
    });
  } catch (e) {
    console.error('Failed to refresh SIMs:', e);
  }
}

document.addEventListener('DOMContentLoaded', () => {
  refreshSims();
  setInterval(() => requestAnimationFrame(refreshSims), 3000);
});

